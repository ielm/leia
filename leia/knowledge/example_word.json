{
  "word": "man",
  "senses": {
    "man-n1": {
      "SENSE": "MAN-N1",
      "WORD": "MAN",
      "CAT": "N",
      "DEF": "male human being",
      "EX": "...",
      "COMMENTS": "...",
      "SYNONYMS": ["X", "Y", "Z"],
      "HYPONYMS": ["A", "B", "C"],
      "SYN-STRUC": {
        "ROOT": "$VAR0",
        "CAT": "N"
      },
      "SEM-STRUC": {
        "HUMAN": {
          "GENDER": "MALE"
        }
      },
      "TMR-HEAD": null,
      "MEANING-PROCEDURES": [],
      "OUTPUT-SYNTAX": [],
      "EXAMPLE-DEPS": [],
      "EXAMPLE-BINDINGS": [],
      "TYPES": [],
      "USE-WITH-TYPES": []
    }
  }
}

/*
  The senses field can have any number of senses in it (only one is shown above).

  SENSE:              the full unique id of the sense; WORD-CAT#; e.g., MAN-N1
  WORD:               the root word; e.g., MAN
  CAT:                the part of speech; e.g., N
  DEF:                a human readable definition of the sense
  EX:                 an example of the word in a sentence
  COMMENTS:           annotator comments
  SYNONYMS:           a list of synonym words; e.g., ["EWE", "RAM"]
  HYPONYMS:           a list of hyponym words; e.g., ["AID", "PHILANTHROPY"]
  SYN-STRUC:          a complex object representing the entire syn-struc form; documented elsewhere
  SEM-STRUC:          a single concept (e.g., "HUMAN"), or a complex sem-struc form; documented elsewhere
  TMR-HEAD:           null, or a variable string, e.g. "$VAR1"
  MEANING-PROCEDURES: list of MP calls, each a list containing the call and parameters; e.g., [ ["COREFER", "^$VAR1", "^$VAR0"], [...], ... ]
  OUTPUT-SYNTAX:      null, or a POS type (e.g., "N"), or a list of POS types (e.g., ["N", "V"])
  EXAMPLE-DEPS:       list of triples (dependencies); e.g. [ ["NSUBJ", "$VAR0", "$VAR1"], [...], ... ]
  EXAMPLE-BINDINGS:   list of strings with optional binding variable numbers; e.g, ["THEY-2", "DEPRECIATED-0", "THE", "STOCK-1"]
  TYPES:              list of types, e.g., ["A", "B", "C"]
  USE-WITH-TYPES:     list of types to use with, e.g., ["A", "B", "C"]
*/
